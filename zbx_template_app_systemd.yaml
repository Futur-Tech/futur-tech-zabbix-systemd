zabbix_export:
  version: '6.0'
  date: '2023-08-03T18:51:41Z'
  groups:
    - uuid: 7f27dc73981940769811e7fae4a26772
      name: Templates/Futur-Tech/Applications
  templates:
    - uuid: eaf9cd920d23461986157f65c166c0ac
      template: 'Futur-Tech App Systemd'
      name: 'Futur-Tech App Systemd'
      description: |
        https://github.com/Futur-Tech/futur-tech-zabbix-systemd
        
        - Discovery rules are copies from official template but with the following changes:
          - Active agent instead of passive
          - Increased Discovery interval to 2h
        - Added "System state" item + triggers
      groups:
        - name: Templates/Futur-Tech/Applications
      items:
        - uuid: c3fa5fc525214bb681be57a17d9250f9
          name: 'System state'
          type: ZABBIX_ACTIVE
          key: 'system.run["systemctl is-system-running"]'
          trends: '0'
          value_type: CHAR
          preprocessing:
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 30m
          tags:
            - tag: Application
              value: Systemd
          triggers:
            - uuid: e5b66d3cabe4486887378afa566352d9
              expression: 'last(/Futur-Tech App Systemd/system.run["systemctl is-system-running"])<>"running"'
              name: 'System state is {ITEM.LASTVALUE}'
              priority: HIGH
              description: |
                System state is not "running".
                Useful commands for debugging:
                systemctl --failed
                systemctl list-units
                systemctl status
              dependencies:
                - name: 'System state is {ITEM.LASTVALUE}'
                  expression: 'last(/Futur-Tech App Systemd/system.run["systemctl is-system-running"])="initializing" or last(/Futur-Tech App Systemd/system.run["systemctl is-system-running"])="starting" or last(/Futur-Tech App Systemd/system.run["systemctl is-system-running"])="stopping"'
            - uuid: 05966a5e300241a4bd28ab18397f7afc
              expression: 'last(/Futur-Tech App Systemd/system.run["systemctl is-system-running"])="initializing" or last(/Futur-Tech App Systemd/system.run["systemctl is-system-running"])="starting" or last(/Futur-Tech App Systemd/system.run["systemctl is-system-running"])="stopping"'
              name: 'System state is {ITEM.LASTVALUE}'
              priority: WARNING
      discovery_rules:
        - uuid: 6182d5bed87f4fdca624c3147311d522
          name: 'Service units discovery'
          type: ZABBIX_ACTIVE
          key: 'systemd.unit.discovery[service]'
          delay: 2h
          filter:
            evaltype: AND
            conditions:
              - macro: '{#UNIT.ACTIVESTATE}'
                value: '{$SYSTEMD.ACTIVESTATE.SERVICE.MATCHES}'
                formulaid: A
              - macro: '{#UNIT.ACTIVESTATE}'
                value: '{$SYSTEMD.ACTIVESTATE.SERVICE.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: B
              - macro: '{#UNIT.UNITFILESTATE}'
                value: '{$SYSTEMD.UNITFILESTATE.SERVICE.MATCHES}'
                formulaid: E
              - macro: '{#UNIT.UNITFILESTATE}'
                value: '{$SYSTEMD.UNITFILESTATE.SERVICE.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: F
              - macro: '{#UNIT.NAME}'
                value: '{$SYSTEMD.NAME.SERVICE.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: C
              - macro: '{#UNIT.NAME}'
                value: '{$SYSTEMD.NAME.SERVICE.MATCHES}'
                formulaid: D
          description: 'Discover systemd service units and their details.'
          item_prototypes:
            - uuid: 94cfd75ff3f342a9a4360d85582310c5
              name: '{#UNIT.NAME}: Active state'
              type: DEPENDENT
              key: 'systemd.service.active_state["{#UNIT.NAME}"]'
              delay: '0'
              history: 7d
              description: 'State value that reflects whether the unit is currently active or not. The following states are currently defined: "active", "reloading", "inactive", "failed", "activating", and "deactivating".'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.ActiveState.state
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 30m
              master_item:
                key: 'systemd.unit.get["{#UNIT.NAME}"]'
              tags:
                - tag: component
                  value: service
              trigger_prototypes:
                - uuid: de36edc26ec242f48b06e3d711e286bc
                  expression: 'last(/Futur-Tech App Systemd/systemd.service.active_state["{#UNIT.NAME}"])<>1'
                  name: '{#UNIT.NAME}: Service is not running'
                  priority: WARNING
                  manual_close: 'YES'
                  tags:
                    - tag: scope
                      value: availability
            - uuid: b7ec403453fb4b7189ea529b87bec445
              name: '{#UNIT.NAME}: Load state'
              type: DEPENDENT
              key: 'systemd.service.load_state["{#UNIT.NAME}"]'
              delay: '0'
              history: 7d
              description: 'State value that reflects whether the configuration file of this unit has been loaded. The following states are currently defined: "loaded", "error", and "masked".'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.LoadState.state
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 30m
              master_item:
                key: 'systemd.unit.get["{#UNIT.NAME}"]'
              tags:
                - tag: component
                  value: service
            - uuid: 4114fdbdc81848da9470f0be47811a33
              name: '{#UNIT.NAME}: Unit file state'
              type: DEPENDENT
              key: 'systemd.service.unitfile_state["{#UNIT.NAME}"]'
              delay: '0'
              history: 7d
              description: 'Encodes the install state of the unit file of FragmentPath. It currently knows the following states: "enabled", "enabled-runtime", "linked", "linked-runtime", "masked", "masked-runtime", "static", "disabled", and "invalid".'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.UnitFileState.state
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 30m
              master_item:
                key: 'systemd.unit.get["{#UNIT.NAME}"]'
              tags:
                - tag: component
                  value: service
            - uuid: 12d49ec44133475b978b17c691b256c3
              name: '{#UNIT.NAME}: Active time'
              type: DEPENDENT
              key: 'systemd.service.uptime["{#UNIT.NAME}"]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: s
              description: 'Number of seconds since unit entered the active state.'
              preprocessing:
                - type: JAVASCRIPT
                  parameters:
                    - |
                      data = JSON.parse(value)
                        if (data.ActiveEnterTimestamp > data.ActiveExitTimestamp) {
                            return Math.floor(Date.now()/1000)-Number(data.ActiveEnterTimestamp)/1000000;
                          }
                        return null;
              master_item:
                key: 'systemd.unit.get["{#UNIT.NAME}"]'
              tags:
                - tag: component
                  value: service
              trigger_prototypes:
                - uuid: 4ca5da8b845c41a5b0763c1d2e5aa210
                  expression: 'last(/Futur-Tech App Systemd/systemd.service.uptime["{#UNIT.NAME}"])<10m'
                  name: '{#UNIT.NAME}: has been restarted'
                  event_name: '{#UNIT.NAME}: has been restarted (uptime < 10m)'
                  priority: INFO
                  description: 'Uptime is less than 10 minutes.'
                  manual_close: 'YES'
                  tags:
                    - tag: scope
                      value: notice
            - uuid: c14a261e29244f259cef0e589595aaf1
              name: '{#UNIT.NAME}: Get unit info'
              type: ZABBIX_ACTIVE
              key: 'systemd.unit.get["{#UNIT.NAME}"]'
              history: '0'
              trends: '0'
              value_type: TEXT
              description: |
                Returns all properties of a systemd service unit.
                 Unit description: {#UNIT.DESCRIPTION}.
              tags:
                - tag: component
                  value: raw
                - tag: component
                  value: unit
        - uuid: e4c3123712fb41039af2f9a643e16574
          name: 'Socket units discovery'
          type: ZABBIX_ACTIVE
          key: 'systemd.unit.discovery[socket]'
          delay: 2h
          filter:
            evaltype: AND
            conditions:
              - macro: '{#UNIT.ACTIVESTATE}'
                value: '{$SYSTEMD.ACTIVESTATE.SOCKET.MATCHES}'
                formulaid: A
              - macro: '{#UNIT.ACTIVESTATE}'
                value: '{$SYSTEMD.ACTIVESTATE.SOCKET.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: B
              - macro: '{#UNIT.UNITFILESTATE}'
                value: '{$SYSTEMD.UNITFILESTATE.SOCKET.MATCHES}'
                formulaid: E
              - macro: '{#UNIT.UNITFILESTATE}'
                value: '{$SYSTEMD.UNITFILESTATE.SOCKET.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: F
              - macro: '{#UNIT.NAME}'
                value: '{$SYSTEMD.NAME.SOCKET.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: C
              - macro: '{#UNIT.NAME}'
                value: '{$SYSTEMD.NAME.SOCKET.MATCHES}'
                formulaid: D
          description: 'Discover systemd socket units and their details.'
          item_prototypes:
            - uuid: ffd38fa289134e579d6bf26fb6d3a802
              name: '{#UNIT.NAME}: Connections accepted per sec'
              type: DEPENDENT
              key: 'systemd.socket.conn_accepted.rate["{#UNIT.NAME}"]'
              delay: '0'
              history: 7d
              description: 'The number of accepted socket connections (NAccepted) per second.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.NAccepted
                - type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: 'systemd.unit.get["{#UNIT.NAME}",Socket]'
              tags:
                - tag: component
                  value: socket
            - uuid: b8396f648cf1495998185a24764fda2c
              name: '{#UNIT.NAME}: Connections connected'
              type: DEPENDENT
              key: 'systemd.socket.conn_count["{#UNIT.NAME}"]'
              delay: '0'
              history: 7d
              description: 'The current number of socket connections (NConnections).'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.NConnections
              master_item:
                key: 'systemd.unit.get["{#UNIT.NAME}",Socket]'
              tags:
                - tag: component
                  value: socket
            - uuid: d97abd497af44225b4f4beb6cce776c6
              name: '{#UNIT.NAME}: Get unit info'
              type: ZABBIX_ACTIVE
              key: 'systemd.unit.get["{#UNIT.NAME}",Socket]'
              history: '0'
              trends: '0'
              value_type: TEXT
              description: |
                Returns all properties of a systemd socket unit.
                 Unit description: {#UNIT.DESCRIPTION}.
              tags:
                - tag: component
                  value: raw
                - tag: component
                  value: socket
      tags:
        - tag: Futur-Tech
      macros:
        - macro: '{$SYSTEMD.NAME.SERVICE.NOT_MATCHES}'
          value: rsync.service
          description: 'Filter of systemd service units by name'
